foo <- mformula(d=3, expl="sx0")
old <- Sys.time()
g1 <- gam_scm(foo, family = mvn_scm(d = 3), data = data.frame(data))
new <- Sys.time() - old
new
summary(g1)
old <- Sys.time()
g2 <- gam_scm(foo, family = mvn_scm(d = 3), data = data.frame(data), optimizer="bfgs")
new <- Sys.time() - old
plot(g1, page=1, scale=FALSE,se=FALSE)
plot(g2, page=1, scale=FALSE,se=FALSE)
max(abs(pg1-pg2))
pg1 <- predict(g1)
pg2 <- predict(g2)
max(abs(pg1-pg2))
new
f <- make_formula(y_1 | y_2 | y_3 ~ s(sx0,k=10) | s(sx0) | s(sx0))
b1 <- bamlss(f, family = mvnchol_bamlss(k = 3, type="modified"), data = data.frame(data), sampler=FALSE)
g2$l
g1$l
str(g1)
g1$AIC
g2$AIC
g2$aic
#[1] -205305.6
g2$aic
#[1] -205305.6
g1$aic
#[1] 410783.3
g1$gcv.ubre
#[1] -205305.5
g2$gcv.ubre
set.seed(456)
n <- nrow(data)
set.seed(456)
n <- nrow(data)
batch_ids <- lapply(1:500, function(...) sample(n, size = 1000))
#batch_ids <- c("nobs" = 1000, "nbatch" = 5)
length(unique(unlist(batch_ids)))
b1_batch <- bamlss(f, data = data.frame(data), family = mvnchol_bamlss(k = 3, type="modified"),
sampler = FALSE, optimizer = opt_bbfit,
nu = 0.1, always = TRUE, AIC = TRUE,
batch_ids = batch_ids) #nbatch = 0.5)#, #)
b1_resampling <- bamlss(f, data = data.frame(data), family = mvnchol_bamlss(k = 3, type="modified"),
sampler = FALSE, optimizer = opt_bbfit,
slice = TRUE, AIC = TRUE,
batch_ids = batch_ids) #nbatch = 0.5)#, #)
plot(g1, page=1, scale=FALSE,se=FALSE)
plot(g2, page=1, scale=FALSE,se=FALSE)
par(mfrow=c(3,3))
plot(b1)
plot(b1_batch)
plot(b1_resampling)
par(mfrow=c(3,3))
pathplot(b1_batch, name="mu1.s.s(sx0).b")
pathplot(b1_batch, name="mu1.p", add=TRUE)
pathplot(b1_batch, name="mu2.s.s(sx0).b")
pathplot(b1_batch, name="mu2.p", add=TRUE)
pathplot(b1_batch, name="mu3.s.s(sx0).b")
pathplot(b1_batch, name="mu3.p", add=TRUE)
pathplot(b1_batch, name="innov1.s.s(sx0).b")
pathplot(b1_batch, name="innov1.p", add=TRUE)
pathplot(b1_batch, name="innov2.s.s(sx0).b")
pathplot(b1_batch, name="innov2.p", add=TRUE)
pathplot(b1_batch, name="innov3.s.s(sx0).b")
pathplot(b1_batch, name="innov3.p", add=TRUE)
pathplot(b1_batch, name="phi12.s.s(sx0).b")
pathplot(b1_batch, name="phi12.p", add=TRUE)
pathplot(b1_batch, name="phi13.s.s(sx0).b")
pathplot(b1_batch, name="phi13.p", add=TRUE)
pathplot(b1_batch, name="phi23.s.s(sx0).b")
pathplot(b1_batch, name="phi23.p", add=TRUE)
par(mfrow=c(3,3))
pathplot(b1_resampling, name="mu1.s.s(sx0).b")
pathplot(b1_resampling, name="mu1.p", add=TRUE)
pathplot(b1_resampling, name="mu2.s.s(sx0).b")
pathplot(b1_resampling, name="mu2.p", add=TRUE)
pathplot(b1_resampling, name="mu3.s.s(sx0).b")
pathplot(b1_resampling, name="mu3.p", add=TRUE)
pathplot(b1_resampling, name="innov1.s.s(sx0).b")
pathplot(b1_resampling, name="innov1.p", add=TRUE)
pathplot(b1_resampling, name="innov2.s.s(sx0).b")
pathplot(b1_resampling, name="innov2.p", add=TRUE)
pathplot(b1_resampling, name="innov3.s.s(sx0).b")
pathplot(b1_resampling, name="innov3.p", add=TRUE)
pathplot(b1_resampling, name="phi12.s.s(sx0).b")
pathplot(b1_resampling, name="phi12.p", add=TRUE)
pathplot(b1_resampling, name="phi13.s.s(sx0).b")
pathplot(b1_resampling, name="phi13.p", add=TRUE)
pathplot(b1_resampling, name="phi23.s.s(sx0).b")
pathplot(b1_resampling, name="phi23.p", add=TRUE)
mu1<-unlist(lapply(1:n, function(x) mu[[x]][1]))
mu2<-unlist(lapply(1:n, function(x) mu[[x]][2]))
mu3<-unlist(lapply(1:n, function(x) mu[[x]][3]))
Th11<-unlist(lapply(1:n, function(x) Theta[[x]][1,1]))
Th22<-unlist(lapply(1:n, function(x) Theta[[x]][2,2]))
Th33<-unlist(lapply(1:n, function(x) Theta[[x]][3,3]))
Th12<-unlist(lapply(1:n, function(x) Theta[[x]][1,2]))
Th13<-unlist(lapply(1:n, function(x) Theta[[x]][1,3]))
Th23<-unlist(lapply(1:n, function(x) Theta[[x]][2,3]))
pg1 <- predict(g1)
pg2 <- predict(g2)
pb1 <- predict(b1)
pb1_batch <- predict(b1_batch)
pb1_resampling <- predict(b1_resampling)
max(abs(pg1-pg2))
max(abs(pg1-cbind(pb1$mu1,pb1$mu2,pb1$mu3,pb1$innov1, pb1$innov2, pb1$innov3, -pb1$phi12, pb1$phi13, pb1$phi23)))
max(abs(pg1-cbind(pb1$mu1,pb1$mu2,pb1$mu3,pb1$innov1, pb1$innov2, pb1$innov3, -pb1$phi12, -pb1$phi13, -pb1$phi23)))
par(mfrow=c(1,1))
plot(mu1, ylim=c(-1,18))
lines(pg1[,1], col="red")
lines(pg2[,1], col="blue")
lines(pb1$mu1, col="green")
lines(pb1_batch$mu1, col="violet")
lines(pb1_resampling$mu1, col="purple")
par(mfrow=c(1,1))
par(mfrow=c(1,1))
plot(mu1, ylim=c(-1,18))
lines(pg1[,1], col="red")
lines(pg2[,1], col="blue")
lines(pb1$mu1, col="green")
lines(pb1_batch$mu1, col="violet")
lines(pb1_resampling$mu1, col="purple")
par(mfrow=c(1,1))
plot(mu2, ylim=c(-1,11))
lines(pg1[,2], col="red")
lines(pg2[,2], col="blue")
lines(pb1$mu2, col="green")
lines(pb1_batch$mu2, col="violet")
lines(pb1_resampling$mu2, col="purple")
par(mfrow=c(1,1))
plot(mu3, ylim=c(-1,9))
lines(pg1[,3], col="red")
lines(pg2[,3], col="blue")
lines(pb1$mu3, col="green")
lines(pb1_batch$mu3, col="violet")
lines(pb1_resampling$mu3, col="purple")
par(mfrow=c(1,1))
plot(Th11, ylim=c(-1,1))
lines(pg1[,4], col="red")
lines(pg2[,4], col="blue")
lines(pb1$innov1, col="green")
lines(pb1_batch$innov1, col="violet")
lines(pb1_resampling$innov1, col="purple")
par(mfrow=c(1,1))
plot(Th22, ylim=c(-0.75,0.5))
lines(pg1[,5], col="red")
lines(pg2[,5], col="blue")
lines(pb1$innov2, col="green")
lines(pb1_batch$innov2, col="violet")
lines(pb1_resampling$innov2, col="purple")
par(mfrow=c(1,1))
plot(Th33, ylim=c(-0.5,0.5))
lines(pg1[,6], col="red")
lines(pg2[,6], col="blue")
lines(pb1$innov3, col="green")
lines(pb1_batch$innov3, col="violet")
lines(pb1_resampling$innov3, col="purple")
par(mfrow=c(1,1))
plot(Th12, ylim=c(-0.75,0.5))
lines(pg1[,7], col="red")
lines(pg2[,7], col="blue")
lines(-pb1$phi12, col="green")
lines(-pb1_batch$phi12, col="violet")
lines(-pb1_resampling$phi12, col="purple")
par(mfrow=c(1,1))
plot(Th13, ylim=c(-0.75,0.5))
lines(pg1[,8], col="red")
lines(pg2[,8], col="blue")
lines(-pb1$phi13, col="green")
lines(-pb1_batch$phi13, col="violet")
lines(-pb1_resampling$phi13, col="purple")
par(mfrow=c(1,1))
plot(Th23, ylim=c(-0.5,0.75))
lines(pg1[,9], col="red")
lines(pg2[,9], col="blue")
lines(-pb1$phi23, col="green")
lines(-pb1_batch$phi23, col="violet")
lines(-pb1_resampling$phi23, col="purple")
set.seed(456)
n <- nrow(data)
batch_ids <- lapply(1:100, function(...) sample(n, size = 1000))
#batch_ids <- c("nobs" = 1000, "nbatch" = 5)
length(unique(unlist(batch_ids)))
b2_batch <- bamlss(f, data = data.frame(data), family = mvnchol_bamlss(k = 3, type="modified"),
sampler = FALSE, optimizer = opt_bbfit,
nu = 0.1, always = TRUE, AIC = TRUE,
batch_ids = batch_ids) #nbatch = 0.5)#, #)
#elapsed time:  2.37min
b2_resampling <- bamlss(f, data = data.frame(data), family = mvnchol_bamlss(k = 3, type="modified"),
sampler = FALSE, optimizer = opt_bbfit,
slice = TRUE, AIC = TRUE,
batch_ids = batch_ids) #nbatch = 0.5)#, #)
plot(g1, page=1, scale=FALSE,se=FALSE)
plot(g2, page=1, scale=FALSE,se=FALSE)
par(mfrow=c(3,3))
plot(b2_batch)
plot(b2_resampling)
par(mfrow=c(3,3))
pathplot(b2_batch, name="mu1.s.s(sx0).b")
pathplot(b2_batch, name="mu1.p", add=TRUE)
pathplot(b2_batch, name="mu2.s.s(sx0).b")
pathplot(b2_batch, name="mu2.p", add=TRUE)
pathplot(b2_batch, name="mu3.s.s(sx0).b")
pathplot(b2_batch, name="mu3.p", add=TRUE)
pathplot(b2_batch, name="innov1.s.s(sx0).b")
pathplot(b2_batch, name="innov1.p", add=TRUE)
pathplot(b2_batch, name="innov2.s.s(sx0).b")
pathplot(b2_batch, name="innov2.p", add=TRUE)
pathplot(b2_batch, name="innov3.s.s(sx0).b")
pathplot(b2_batch, name="innov3.p", add=TRUE)
pathplot(b2_batch, name="phi12.s.s(sx0).b")
pathplot(b2_batch, name="phi12.p", add=TRUE)
pathplot(b2_batch, name="phi13.s.s(sx0).b")
pathplot(b2_batch, name="phi13.p", add=TRUE)
pathplot(b2_batch, name="phi23.s.s(sx0).b")
pathplot(b2_batch, name="phi23.p", add=TRUE)
par(mfrow=c(3,3))
pathplot(b2_resampling, name="mu1.s.s(sx0).b")
pathplot(b2_resampling, name="mu1.p", add=TRUE)
pathplot(b2_resampling, name="mu2.s.s(sx0).b")
pathplot(b2_resampling, name="mu2.p", add=TRUE)
pathplot(b2_resampling, name="mu3.s.s(sx0).b")
pathplot(b2_resampling, name="mu3.p", add=TRUE)
pathplot(b2_resampling, name="innov1.s.s(sx0).b")
pathplot(b2_resampling, name="innov1.p", add=TRUE)
pathplot(b2_resampling, name="innov2.s.s(sx0).b")
pathplot(b2_resampling, name="innov2.p", add=TRUE)
pathplot(b2_resampling, name="innov3.s.s(sx0).b")
pathplot(b2_resampling, name="innov3.p", add=TRUE)
pathplot(b2_resampling, name="phi12.s.s(sx0).b")
pathplot(b2_resampling, name="phi12.p", add=TRUE)
pathplot(b2_resampling, name="phi13.s.s(sx0).b")
pathplot(b2_resampling, name="phi13.p", add=TRUE)
pathplot(b2_resampling, name="phi23.s.s(sx0).b")
pathplot(b2_resampling, name="phi23.p", add=TRUE)
pb2_batch <- predict(b2_batch)
pb2_resampling <- predict(b2_resampling)
par(mfrow=c(1,1))
plot(mu1, ylim=c(-1,18))
lines(pg1[,1], col="red")
lines(pg2[,1], col="blue")
lines(pb1$mu1, col="green")
lines(pb1_batch$mu1, col="violet")
lines(pb1_resampling$mu1, col="purple")
par(mfrow=c(1,1))
plot(mu2, ylim=c(-1,11))
lines(pg1[,2], col="red")
lines(pg2[,2], col="blue")
lines(pb1$mu2, col="green")
lines(pb2_batch$mu2, col="violet")
lines(pb2_resampling$mu2, col="purple")
par(mfrow=c(1,1))
plot(mu3, ylim=c(-1,9))
lines(pg1[,3], col="red")
lines(pg2[,3], col="blue")
lines(pb1$mu3, col="green")
lines(pb2_batch$mu3, col="violet")
lines(pb2_resampling$mu3, col="purple")
par(mfrow=c(1,1))
plot(Th11, ylim=c(-1,1))
lines(pg1[,4], col="red")
lines(pg2[,4], col="blue")
lines(pb1$innov1, col="green")
lines(pb2_batch$innov1, col="violet")
lines(pb2_resampling$innov1, col="purple")
par(mfrow=c(1,1))
plot(Th22, ylim=c(-0.75,0.5))
lines(pg1[,5], col="red")
lines(pg2[,5], col="blue")
lines(pb1$innov2, col="green")
lines(pb2_batch$innov2, col="violet")
lines(pb2_resampling$innov2, col="purple")
par(mfrow=c(1,1))
plot(Th33, ylim=c(-0.5,0.5))
lines(pg1[,6], col="red")
lines(pg2[,6], col="blue")
lines(pb1$innov3, col="green")
lines(pb2_batch$innov3, col="violet")
lines(pb2_resampling$innov3, col="purple")
par(mfrow=c(1,1))
plot(Th12, ylim=c(-0.75,0.5))
lines(pg1[,7], col="red")
lines(pg2[,7], col="blue")
lines(-pb1$phi12, col="green")
lines(-pb2_batch$phi12, col="violet")
lines(-pb2_resampling$phi12, col="purple")
par(mfrow=c(1,1))
plot(Th13, ylim=c(-0.75,0.5))
lines(pg1[,8], col="red")
lines(pg2[,8], col="blue")
lines(-pb1$phi13, col="green")
lines(-pb2_batch$phi13, col="violet")
lines(-pb2_resampling$phi13, col="purple")
par(mfrow=c(1,1))
plot(Th23, ylim=c(-0.5,0.75))
lines(pg1[,9], col="red")
lines(pg2[,9], col="blue")
lines(-pb1$phi23, col="green")
lines(-pb2_batch$phi23, col="violet")
lines(-pb2_resampling$phi23, col="purple")
getwd()
setwd("C:/Users/Gioia/Desktop/ScalableAdditiveCovarianceMatrixModels")
save(g1, file="fit_efs.RData")
save(g2, file="fit_bfgs.RData")
load("fit_bfgs.RData")
save(b1, file="fit_bamlss.RData")
load("fit_bamlss.RData")
save(b1_batch, file="fit_bamlss_batch500.RData")
load("fit_bamlss_batch500.RData")
save(b1_resampling, file="fit_bamlss_batchR500.RData")
load("fit_bamlss_batchR500.RData")
save(b2_batch, file="fit_bamlss_batch100.RData")
load("fit_bamlss_batch100.RData")
save(b2_resampling, file="fit_bamlss_batchR100.RData")
load("fit_bamlss_batchR100.RData")
g2$l-0.5*t(coef(g2))%*%g2$St%*%coef(g2)
g$sp
g2$sp
sum(g2$sp*0.5*t(coef(g2))%*%g2$St%*%coef(g2))
sapply(1:length(g$sp, function(x) g$sp[.x]*g2$St)
g2$l-0.5*t(coef(g2))%*%(g$sp*g2$St)%*%coef(g2))
sapply(1:length(g2$sp), function(x) g2$sp[.x]*g2$St)
sapply(1:length(g2$sp), function(.x) g2$sp[.x]*g2$St)
lapply(1:length(g2$sp), function(.x) g2$sp[.x]*g2$St)
g2$St
lapply(1:length(g2$sp), function() sum(lapply(1:length(g2$sp), function(.x) g2$sp[.x]*g2$St)))
lapply(1:length(g2$sp), function(.x) g2$sp[.x]*g2$St))
lapply(1:length(g2$sp), function(.x) g2$sp[.x]*g2$St)
sapply(1:length(g2$sp), function(.x) g2$sp[.x]*g2$St)
tapply(1:length(g2$sp), function(.x) g2$sp[.x]*g2$St)
mapply(1:length(g2$sp), function(.x) g2$sp[.x]*g2$St)
lapply(1:length(g2$sp), function(.x) g2$sp[.x]*g2$St)
ppp<-lapply(1:length(g2$sp), function(.x) g2$sp[.x]*g2$St)
lapply(1:length(ppp), function(.x) sapply(ppp[.x],sum))
fppp <- ppp[[1]]
for(j in 2:9){
fppp <- fppp + ppp[[j]]
}
g2$l-0.5*t(coef(g2))%*%fppp%*%coef(g2))
g2$l-0.5*t(coef(g2))%*%fppp%*%coef(g2)
fppp
g2$l-0.5*t(coef(g2))%*%g2$St%*%coef(g2)
g2$l-exp(0.5*t(coef(g2))%*%g2$St%*%coef(g2))
g2$l-exp(-0.5*t(coef(g2))%*%g2$St%*%coef(g2))
g2$l-0.5*t(coef(g2))%*%g2$St%*%coef(g2)
bamlss
light_bamlss
bamlss::light_bamlss
bamlss:::light_bamlss
bamlss:::ff_data_bamlss
g2$l-0.5*drop(t(coef(g2))%*%g2$St%*%coef(g2))
gamlss.gH
set.seed(456)
n <- nrow(data)
batch_ids <- lapply(1:500, function(...) sample(n, size = 1000))
#batch_ids <- c("nobs" = 1000, "nbatch" = 5)
length(unique(unlist(batch_ids)))
plot(g1, page=1, scale=FALSE,se=FALSE)
plot(g2, page=1, scale=FALSE,se=FALSE)
par(mfrow=c(3,3))
plot(b1)
plot(b1_batch)
plot(b1_resampling)
par(mfrow=c(3,3))
pathplot(b1_batch, name="mu1.s.s(sx0).b")
pathplot(b1_batch, name="mu1.p", add=TRUE)
pathplot(b1_batch, name="mu2.s.s(sx0).b")
pathplot(b1_batch, name="mu2.p", add=TRUE)
pathplot(b1_batch, name="mu3.s.s(sx0).b")
par(mfrow=c(1,1))
pathplot(b1_batch, name="mu1.p", add=TRUE)
par(mfrow=c(1,1))
pathplot(b1_batch, name="mu1.s.s(sx0).b")
pathplot(b1_batch, name="mu1.p", add=TRUE)
pathplot(b1_batch, name="mu1.p", add=TRUE)
par(mfrow=c(3,3))
pathplot(b1_batch, name="mu1.s.s(sx0).b")
pathplot(b1_batch, name="mu1.p", add=TRUE)
pathplot(b1_batch, name="mu2.s.s(sx0).b")
pathplot(b1_batch, name="mu2.p", add=TRUE)
pathplot(b1_batch, name="mu3.s.s(sx0).b")
pathplot(b1_batch, name="mu3.p", add=TRUE)
pathplot(b1_batch, name="innov1.s.s(sx0).b")
pathplot(b1_batch, name="innov1.p", add=TRUE)
pathplot(b1_batch, name="innov2.s.s(sx0).b")
pathplot(b1_batch, name="innov2.p", add=TRUE)
pathplot(b1_batch, name="innov3.s.s(sx0).b")
pathplot(b1_batch, name="innov3.p", add=TRUE)
pathplot(b1_batch, name="phi12.s.s(sx0).b")
pathplot(b1_batch, name="phi12.p", add=TRUE)
pathplot(b1_batch, name="phi13.s.s(sx0).b")
pathplot(b1_batch, name="phi13.p", add=TRUE)
pathplot(b1_batch, name="phi23.s.s(sx0).b")
pathplot(b1_batch, name="phi23.p", add=TRUE)
par(mfrow=c(3,3))
pathplot(b1_resampling, name="mu1.s.s(sx0).b")
pathplot(b1_resampling, name="mu1.p", add=TRUE)
pathplot(b1_resampling, name="mu2.s.s(sx0).b")
pathplot(b1_resampling, name="mu2.p", add=TRUE)
pathplot(b1_resampling, name="mu3.s.s(sx0).b")
pathplot(b1_resampling, name="mu3.p", add=TRUE)
pathplot(b1_resampling, name="innov1.s.s(sx0).b")
pathplot(b1_resampling, name="innov1.p", add=TRUE)
pathplot(b1_resampling, name="innov2.s.s(sx0).b")
pathplot(b1_resampling, name="innov2.p", add=TRUE)
pathplot(b1_resampling, name="innov3.s.s(sx0).b")
pathplot(b1_resampling, name="innov3.p", add=TRUE)
pathplot(b1_resampling, name="phi12.s.s(sx0).b")
pathplot(b1_resampling, name="phi12.p", add=TRUE)
pathplot(b1_resampling, name="phi13.s.s(sx0).b")
pathplot(b1_resampling, name="phi13.p", add=TRUE)
pathplot(b1_resampling, name="phi23.s.s(sx0).b")
pathplot(b1_resampling, name="phi23.p", add=TRUE)
plot(g1, page=1, scale=FALSE,se=FALSE)
plot(g2, page=1, scale=FALSE,se=FALSE)
plot(b1)
plot(b1_batch)
mu1<-unlist(lapply(1:n, function(x) mu[[x]][1]))
mu2<-unlist(lapply(1:n, function(x) mu[[x]][2]))
mu3<-unlist(lapply(1:n, function(x) mu[[x]][3]))
Th11<-unlist(lapply(1:n, function(x) Theta[[x]][1,1]))
Th22<-unlist(lapply(1:n, function(x) Theta[[x]][2,2]))
Th33<-unlist(lapply(1:n, function(x) Theta[[x]][3,3]))
Th12<-unlist(lapply(1:n, function(x) Theta[[x]][1,2]))
Th13<-unlist(lapply(1:n, function(x) Theta[[x]][1,3]))
Th23<-unlist(lapply(1:n, function(x) Theta[[x]][2,3]))
par(mfrow=c(1,1))
plot(mu1, ylim=c(-1,18))
lines(pg1[,1], col="red")
lines(pg2[,1], col="blue")
lines(pb1$mu1, col="green")
lines(pb1_batch$mu1, col="violet")
lines(pb1_resampling$mu1, col="purple")
par(mfrow=c(3,3))
pathplot(b1_batch, name="mu1.s.s(sx0).b")
pathplot(b1_batch, name="mu1.p", add=TRUE)
pathplot(b1_batch, name="mu2.s.s(sx0).b")
pathplot(b1_batch, name="mu2.p", add=TRUE)
pathplot(b1_batch, name="mu3.s.s(sx0).b")
pathplot(b1_batch, name="mu3.p", add=TRUE)
pathplot(b1_batch, name="innov1.s.s(sx0).b")
pathplot(b1_batch, name="innov1.p", add=TRUE)
pathplot(b1_batch, name="innov2.s.s(sx0).b")
pathplot(b1_batch, name="innov2.p", add=TRUE)
pathplot(b1_batch, name="innov3.s.s(sx0).b")
pathplot(b1_batch, name="innov3.p", add=TRUE)
pathplot(b1_batch, name="phi12.s.s(sx0).b")
pathplot(b1_batch, name="phi12.p", add=TRUE)
pathplot(b1_batch, name="phi13.s.s(sx0).b")
pathplot(b1_batch, name="phi13.p", add=TRUE)
pathplot(b1_batch, name="phi23.s.s(sx0).b")
pathplot(b1_batch, name="phi23.p", add=TRUE)
par(mfrow=c(1,1))
plot(mu1, ylim=c(-1,18))
lines(pg1[,1], col="red")
lines(pg2[,1], col="blue")
lines(pb1$mu1, col="green")
lines(pb1_batch$mu1, col="violet")
lines(pb1_resampling$mu1, col="purple")
par(mfrow=c(1,1))
plot(mu2, ylim=c(-1,11))
lines(pg1[,2], col="red")
lines(pg2[,2], col="blue")
lines(pb1$mu2, col="green")
lines(pb1_batch$mu2, col="violet")
lines(pb1_resampling$mu2, col="purple")
par(mfrow=c(1,1))
plot(mu3, ylim=c(-1,9))
lines(pg1[,3], col="red")
lines(pg2[,3], col="blue")
lines(pb1$mu3, col="green")
lines(pb1_batch$mu3, col="violet")
lines(pb1_resampling$mu3, col="purple")
par(mfrow=c(1,1))
plot(Th11, ylim=c(-1,1))
lines(pg1[,4], col="red")
lines(pg2[,4], col="blue")
lines(pb1$innov1, col="green")
lines(pb1_batch$innov1, col="violet")
lines(pb1_resampling$innov1, col="purple")
g1 <- gam_scm(foo, family = mvn_scm(d = 3), data = data.frame(data), aGam = control(list(trace=TRUE)))
g1 <- gam_scm(foo, family = mvn_scm(d = 3), data = data.frame(data), aGam = list(control(list(trace=TRUE))))
g1 <- gam_scm(foo, family = mvn_scm(d = 3), data = data.frame(data),aGam = list( control = list(trace=TRUE)))
g1$l - 0.5*34.3501
g1$l + 0.5*34.3501
g1$l - 0.5*34.3501
g1$l -0.5*drop(t(coef(g1))%*%g1$St%*%coef(g1))
g1$l -*drop(t(coef(g1))%*%g1$St%*%coef(g1))
g1$l - drop(t(coef(g1))%*%g1$St%*%coef(g1))
install.package("filontropy")
install.packages("dlookr")
install.packages("qpdf")
install.packages(c("AlgDesign", "arm", "bayesm", "bbotk", "BH", "bit", "blob", "boot", "brew", "broom", "cachem", "car", "caret", "checkmate", "classInt", "cli", "clue", "colorspace", "colourpicker", "commonmark", "compositions", "conquer", "copula", "curl", "DAAG", "data.table", "DBI", "dbplyr", "DEoptimR", "devtools", "distributional", "dotCall64", "dplyr", "DT", "dtplyr", "e1071", "evaluate", "expm", "fansi", "fastmap", "fields", "FNN", "forcats", "forecast", "foreign", "Formula", "fracdiff", "fs", "future", "future.apply", "gam", "gargle", "geojsonio", "geometries", "gert", "ggmap", "ggplot2", "ggpubr", "ggrepel", "ggridges", "ggsci", "gh", "gitcreds", "glmnet", "globals", "Gmisc", "gmp", "googledrive", "googlesheets4", "gower", "gsl", "gstat", "gtable", "gtools", "hardhat", "haven", "heplots", "hexbin", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "installr", "intervals", "ipred", "jpeg", "klaR", "labelled", "latex2exp", "latticeExtra", "lava", "lavaan", "lgr", "listenv", "lme4", "lmtest", "lobstr", "loo", "lubridate", "magrittr", "mapdata", "maps", "maptools", "markdown", "matrixcalc", "MatrixModels", "MBA", "mlr3", "mlr3cluster", "mlr3data", "mlr3filters", "mlr3fselect", "mlr3hyperband", "mlr3learners", "mlr3misc", "mlr3pipelines", "mlr3tuning", "mlr3tuningspaces", "mlr3verse", "mlr3viz", "mlt", "mnormt", "modelr", "moments", "multcomp", "mvnfast", "nleqslv", "nlme", "OpenMx", "openssl", "openxlsx", "packrat", "palmerpenguins", "paradox", "parallelly", "partitions", "pbkrtest", "pillar", "pkgbuild", "plot3Drgl", "png", "polynom", "posterior", "precrec", "progressr", "protolite", "proxy", "pryr", "ps", "psych", "purrr", "quantmod", "quantreg", "questionr", "R.cache", "R.utils", "randomForest", "rbibutils", "RcppArmadillo", "RcppParallel", "Rdpack", "readr", "readxl", "recipes", "reprex", "rgdal", "rgeos", "rgl", "rlang", "Rmpfr", "robustbase", "roptim", "roxygen2", "rpart.plot", "rsconnect", "rstan", "rstantools", "rstatix", "rstudioapi", "rversions", "rvest", "s2", "sandwich", "sas7bdat", "sass", "scoringRules", "sets", "sfheaders", "sourcetools", "sp", "spacetime", "spam", "stringi", "stringr", "styler", "survival", "svglite", "sys", "testthat", "tibble", "tidyr", "tidyverse", "timeDate", "tinytex", "TMB", "tram", "triebeard", "tseries", "tzdb", "ucminf", "urca", "usethis", "utf8", "uuid", "V8", "vctrs", "VGAM", "VineCopula", "vroom", "webshot", "whisker", "wk", "writexl", "xts", "yaImpute", "yaml", "zip", "zoo"))
144/9
install.packages(c("rgl", "rstan"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("C:/Program Files/qpdf 11.3.0/bin")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("C:/Program Files/qpdf 11.3.0/bin")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("R_QPDF", "qpdf")
Sys.getenv("C:\Program Files\qpdf 11.3.0\bin")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("C:/Program Files/qpdf 11.3.0/bin")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("C:/Program Files/qpdf 11.3.0/bin")
Sys.getenv("C:/Program Files/qpdf 11.3.0/bin")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("C:/Program Files/qpdf 11.3.0/bin")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("C:/Program Files/qpdf 11.3.0/bin")
